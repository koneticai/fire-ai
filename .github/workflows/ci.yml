name: CI Pipeline

on:
  push:
    branches: [main, develop, "enhancement/**", "feature/**", "fix/**"]
  pull_request:
    branches: [main, develop]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: poetry install
      
      - name: Lint with pylint
        run: poetry run pylint src/app --exit-zero

  test-python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: poetry install
      
      - name: Run tests
        run: poetry run pytest --cov=src --cov-report=json --cov-report=term
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./services/api/coverage.json
          flags: python
        continue-on-error: true

  build-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Detect Go service path
        id: gosvc
        run: |
          if [ -d "services/api/src/go_service" ]; then
            echo "path=services/api/src/go_service" >> "$GITHUB_OUTPUT"
          elif [ -d "src/go_service" ]; then
            echo "path=src/go_service" >> "$GITHUB_OUTPUT"
          else
            echo "path=" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Build Go service (if present)
        if: steps.gosvc.outputs.path != ''
        run: cd "${{ steps.gosvc.outputs.path }}" && go build -v ./...
      
      - name: Test Go service (if present)
        if: steps.gosvc.outputs.path != ''
        run: cd "${{ steps.gosvc.outputs.path }}" && go test -v ./...
      
      - name: Note - Go service not present (skip)
        if: steps.gosvc.outputs.path == ''
        run: echo "No Go service directory found. Skipping Go build/test."

  security-scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Install safety
        run: pip install safety
      
      - name: Security check
        run: poetry export -f requirements.txt | safety check --stdin
        continue-on-error: true
