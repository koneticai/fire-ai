name: CI
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  python:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install pytest pytest-cov
          # Install from services/api if it exists (newer structure)
          if [ -f services/api/pyproject.toml ]; then 
            pip install jsonschema fastapi pydantic sqlalchemy httpx python-jose cryptography
          elif [ -f pyproject.toml ]; then 
            pip install -e . || echo "Warning: Could not install project dependencies"
          fi

      - name: Lint/Format (if tools present)
        run: |
          source .venv/bin/activate
          if command -v ruff >/dev/null 2>&1; then ruff check .; fi
          if command -v black >/dev/null 2>&1; then black --check .; fi

      - name: Tests
        env:
          PYTHONPATH: ${{ github.workspace }}/services/api/src:${{ github.workspace }}/services/api
        run: |
          source .venv/bin/activate
          pytest -q --ignore=services/api/tests/performance

  node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check for package.json
        id: check-package
        run: |
          if [ -f package.json ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      
      - uses: actions/setup-node@v4
        if: steps.check-package.outputs.exists == 'true'
        with:
          node-version: 20
          cache: npm
      
      - run: npm ci
        if: steps.check-package.outputs.exists == 'true'
      
      - run: npm run typecheck --if-present
        if: steps.check-package.outputs.exists == 'true'
      
      - run: npm run lint --if-present
        if: steps.check-package.outputs.exists == 'true'
      
      - run: npm test --if-present
        if: steps.check-package.outputs.exists == 'true'
